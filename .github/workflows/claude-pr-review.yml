name: Claude PR Review

on:
  issues:
    types: [opened, edited]
  issue_comment:
    types: [created]

permissions:
  issues: write
  contents: read

jobs:
  claude-issue-response:
    runs-on: ubuntu-latest
    if: |
      contains(github.event.issue.body, '@claude') ||
      contains(github.event.comment.body, '@claude')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Respond to Issue
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue = context.payload.issue;
            const comment = context.payload.comment;
            const body = comment ? comment.body : issue.body;
            
            console.log('Processing request:', {
              type: comment ? 'comment' : 'issue',
              body: body
            });
            
            // Parse the request to understand what's needed
            const isToggleButtonIssue = body.toLowerCase().includes('toggle button');
            const isTestRequest = body.toLowerCase().includes('test');
            const isVerifyRequest = body.toLowerCase().includes('verify');
            
            let response;
            if (isToggleButtonIssue) {
              response = `I'll help you with the toggle button issue! Let me analyze it:

1. First, I'll check the toggle button implementation
2. I'll verify the functionality across different states
3. I'll look for any potential stability issues

Please provide any specific test cases or scenarios you'd like me to check.

Common toggle button issues I can help with:
- State management problems
- Event handling issues
- Styling inconsistencies
- Accessibility concerns
- Browser compatibility issues

Would you like me to start with any particular aspect?`;
            } else {
              response = "I'll help you with this issue. Could you please provide more details about what you'd like me to check or verify?";
            }
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue.number,
              body: response
            });