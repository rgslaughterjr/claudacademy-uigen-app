name: Claude Issue Response

on:
  issues:
    types: [opened, edited]
  issue_comment:
    types: [created]

permissions:
  issues: write
  contents: read

env:
  TOGGLE_INITIAL_RESPONSE: |
    I'll help verify the toggle button functionality:

    üîç Areas to check:
    1. State management
    2. Event handling
    3. UI/UX consistency
    4. Browser compatibility
    5. Accessibility compliance

    Would you like me to start with any specific aspect?

  STATE_MANAGEMENT_RESPONSE: |
    Analyzing toggle button state management üîÑ

    **Initial Checklist:**
    - [ ] State initialization
    - [ ] Click state updates
    - [ ] State persistence
    - [ ] Props management
    - [ ] State synchronization

    Let me check the implementation...

jobs:
  respond-to-mention:
    runs-on: ubuntu-latest
    if: |
      contains(github.event.issue.body, '@claude') ||
      contains(github.event.comment.body, '@claude')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Debug Directory Structure
        run: |
          echo "Current directory:"
          pwd
          echo "\nDirectory contents:"
          ls -la
          echo "\nRecursive contents:"
          find . -type f -name "*.ts*" -o -name "*.js*"

      - name: Search and Analyze Code
        id: analyze
        run: |
          # Navigate to uigen directory
          cd uigen
          
          echo "Looking for toggle button implementations..."
          
          # Search in src directory for toggle components
          TOGGLE_FILES=$(find . -type f \( -name "*.tsx" -o -name "*.jsx" -o -name "*.ts" -o -name "*.js" \) -exec grep -l -i "toggle\|switch" {} \; || true)
          
          if [ -n "$TOGGLE_FILES" ]; then
            echo "Found toggle button files:"
            echo "$TOGGLE_FILES"
            
            # Start analysis output
            {
              echo "ANALYSIS<<EOF"
              echo "**Implementation Analysis Results:**"
              echo ""
              
              for file in $TOGGLE_FILES; do
                echo "üìÑ Analyzing \`$file\`:"
                echo ""
                
                # Check state management
                if grep -l "useState\|useReducer\|useContext" "$file" > /dev/null; then
                  echo "‚úÖ State Management:"
                  grep -l "useState" "$file" > /dev/null && echo "  - Uses useState for toggle state"
                  grep -l "useReducer" "$file" > /dev/null && echo "  - Uses useReducer for complex state"
                  grep -l "useContext" "$file" > /dev/null && echo "  - Uses Context for state sharing"
                else
                  echo "‚ùå No React state management found"
                fi
                
                # Check event handlers
                if grep -l "onClick\|onChange\|onToggle" "$file" > /dev/null; then
                  echo "‚úÖ Event Handling:"
                  grep -l "onClick" "$file" > /dev/null && echo "  - Implements click handling"
                  grep -l "onChange" "$file" > /dev/null && echo "  - Handles state changes"
                  grep -l "onToggle" "$file" > /dev/null && echo "  - Custom toggle handler"
                else
                  echo "‚ùå No event handlers found"
                fi
                
                # Check props
                if grep -l "interface.*Props\|type.*Props" "$file" > /dev/null; then
                  echo "‚úÖ Props Management:"
                  echo "  - TypeScript props interface/type defined"
                else
                  echo "‚ùå No TypeScript props definition found"
                fi
                
                echo ""
              done
              
              echo "**Recommendations:**"
              echo "1. Ensure proper state initialization"
              echo "2. Add state persistence if needed"
              echo "3. Consider adding TypeScript types"
              echo "4. Implement proper event handling"
              echo ""
              
              echo "EOF"
            } >> $GITHUB_ENV
          else
            echo "ANALYSIS=**No Toggle Button Files Found**\n\nCould not locate any toggle button implementations in the codebase. Please check:\n1. The code is committed\n2. The files use .tsx, .jsx, .ts, or .js extensions\n3. The components contain 'toggle' or 'switch' in their name or content" >> $GITHUB_ENV
          fi

      - name: Post Response
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue = context.payload.issue;
            const comment = context.payload.comment;
            const content = comment ? comment.body : issue.body;
            const lowerContent = content.toLowerCase();
            
            let response;
            
            // Initial toggle verification request
            if (lowerContent.includes('toggle') && lowerContent.includes('verify')) {
              response = process.env.TOGGLE_INITIAL_RESPONSE;
            }
            // State management analysis
            else if (lowerContent.includes('state')) {
              response = process.env.STATE_MANAGEMENT_RESPONSE + "\n\n" + process.env.ANALYSIS;
            }
            else {
              response = process.env.TOGGLE_INITIAL_RESPONSE;
            }
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue.number,
              body: response
            });